# ---This alias effectively creates a bookmarking app---
# it adds global symlink shortcuts for use with the 'cds' command
# ex: 'cds studycloud' will run 'cd -P ~/.short/studycloud'
# to add a shortcut: go to the target directory and run 'cds + <shortcut_name>' or 'cds + .' to use the current directory name
# to remove a shortcut: run 'cds - <shortcut_name>' (you can also tack on multiple shortcut names separated by spaces)
# to list your shortcuts: run 'cds .'
cds() {
    if [ ! -d ~/.short ]; then
        mkdir ~/.short
    fi
    if [ $# -eq 1 ] && [ "$1" = "." ]; then
        ls ~/.short/
    elif [ $# -eq 2 ] && [ "$1" = "+" ]; then
        if [ "$2" != "-" ]; then
            ln -sfn "$PWD" "$HOME/.short/$2"
        fi
    elif [ $# -ge 2 ] && [ "$1" = "-" ]; then
        local args=( ${@:2} )
        args=( ${args[@]%/} )
        eval "rm ${args[@]/#/"~/.short/"}"
    elif [ $# -eq 0 ] || [ -d "$1" ] || [ "$1" = "-" ]; then
        cd "$@"
    elif [ -d "$(readlink -f ~/.short/$1)" ]; then
        cd -P ~/.short/$1
    else
        echo "cd: $1: No such file or directory"
    fi
}

# a custom tab-completion function for cds
_cds() {
    # array variable storing the possible completions
    COMPREPLY=()
    # the current completion word
    local word="${COMP_WORDS[COMP_CWORD]}"
    if [ "$3" = "-" ]; then
        COMPREPLY+=( $(compgen -W "$(ls $HOME/.short/)" -- "$word") )
    fi
}
# command to enable cds tab-completion
# filenames tag tells bash to treat completions as filenames
# nospace tells it to not put a space afterward
# and bashdefault brings in the rest of the "Bash default" completions
complete -o filenames -o nospace -o bashdefault -F _cds cds
