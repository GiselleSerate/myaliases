# Add an alias.
addalias() {
	trap 'previous_command=$this_command; this_command=$BASH_COMMAND' DEBUG
	ehe="$previous_command"
	echo $ehe
	echo "$previous_command, and $this_command"
	# Create array of args.
	args=("$@")
	# TODO: Call original alias command with original arguments.
	# This will be your option. If it is set, paste everything into the .usr_aliases file. 
	echo ${args[$#-1]}
	if [[ "${args[$#-1]}" == "-p" ]]; then
		echo "Writing persistent alias."
		if [ ! -f $ABSPATH/.usr_aliases ]; then
			echo "File .usr_aliases does not exist. Creating."
			touch $ABSPATH/.usr_aliases
		fi
		# Blindly adds aliases to file currently. Should at least check whether it exists?
		# echo "alias \""$2"\"=\""$3"\"" >> $ABSPATH/.usr_aliases;
		echo [[ "$*" ]]
		allargs="$*"
		echo "$allargs"
		echo "${allargs%-p}"
		for arg in "$@"; do
			if [[ $arg != "-p" ]]; then
				echo $arg
			fi
		done
	fi
}
