#!/bin/sh

# This is the absolute path to the repo.
ABSPATH="$(CDPATH= cd -- "$(dirname -- "$0")" && pwd -P)"

# Handle: given a file as a first argument,
# include it in a file given as a second arg
# if it is not already there.
handle () {
	# check whether we need to locate the true path or use literal $ABSPATH
	if [ -f "$ABSPATH/$1" ]; then
		local new_text="\"$ABSPATH/$1\""
	else
		local new_text="$1"
	fi
	local new_text="test -f $new_text && . $new_text"
	# make sure that file exists before prepending to it
	touch "$2"
	if ! grep -Fxq "$new_text" "$2"; then
		echo "Including $1."
		echo "$(echo "$new_text" | cat - "$2")" > "$2"
	fi
}

# If there are no arguments, then include all.
if [ $# -eq 0 ]; then
	FILES="$(cd "$ABSPATH" && echo .bash_*)"
else
	FILES="$(echo " $@" | sed 's/ / .bash_/g')"
fi

for f in "$FILES"; do
	handle "$f" "$ABSPATH/.included"
done

# Set up global var for the path to this directory.
# But first, retrieve the contents of .included without the ABSPATH declaration
curr_include="$(grep -svx "ABSPATH=.*" "$ABSPATH/.included")"
echo "$(echo "ABSPATH='$ABSPATH'"; echo "$curr_include")" > "$ABSPATH/.included"

# If .bash_aliases doesn't already include .included, make it do that.
handle "$ABSPATH/.included" "$HOME"/.bash_aliases
